{"version":3,"sources":["index.js"],"names":["Square","props","className","value","winner","onClick","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"wNAIA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAW,WAAaD,EAAME,OAASF,EAAMG,SAAWH,EAAME,MAAQ,SAAW,IACjFE,QAASJ,EAAMI,QAFjB,SAIGJ,EAAME,Q,IAKPG,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OACE,cAACP,EAAD,CACEI,OAAQI,KAAKP,MAAMG,OACnBD,MAAOK,KAAKP,MAAMQ,QAAQF,GAC1BF,QAAS,kBAAM,EAAKJ,MAAMI,QAAQE,Q,oBAKxC,WACE,OACE,gCACE,sBAAKL,UAAU,YAAf,UACGM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKR,UAAU,YAAf,UACGM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKR,UAAU,YAAf,UACGM,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXC,QAAS,CACP,CACEN,QAASO,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GATM,E,+CAanB,SAAYZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAa,GAE9DT,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CACtB,CACEf,QAASA,KAGbS,WAAYH,EAAQM,OACpBF,SAAUX,KAAKM,MAAMK,a,oBAIzB,SAAOM,GACLjB,KAAKe,SAAS,CACZL,WAAYO,EACZN,QAASM,EAAO,IAAM,M,oBAI1B,WAAU,IAaJC,EAbG,OACDX,EAAUP,KAAKM,MAAMC,QACrBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7Bd,EAASkB,EAAgBK,EAAQlB,SACjCmB,EAAQb,EAAQc,KAAI,SAACJ,EAAMK,GAC/B,IAAMC,EAAOD,EAAO,+EAAqBA,EAAO,uEAChD,OACE,6BACE,wBAAQzB,QAAS,kBAAM,EAAK2B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEJ,EADEtB,EACO,8CAAaA,EAEb,+EAAqBI,KAAKM,MAAMK,QAAU,IAAM,KAIzD,sBAAKjB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACI,EAAD,CACEF,OAAQA,EACRK,QAASkB,EAAQlB,QACjBJ,QAAS,SAACE,GAAD,OAAO,EAAK0B,YAAY1B,QAGrC,sBAAKL,UAAU,YAAf,UACE,8BAAMwB,IACN,6BAAKE,c,GAvEIjB,IAAMC,WA8EzB,SAASU,EAAgBb,GAWvB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMb,OAAQd,IAAK,CACrC,kBAAkB2B,EAAM3B,GAAxB,GAAO4B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI5B,EAAQ0B,IAAM1B,EAAQ0B,KAAO1B,EAAQ2B,IAAM3B,EAAQ0B,KAAO1B,EAAQ4B,GACpE,OAAO5B,EAAQ0B,GAGnB,OAAO,KAITG,IAASC,OAAO,cAAC1B,EAAD,IAAU2B,SAASC,eAAe,W","file":"static/js/main.e8a0b813.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className={\"square \" + (props.value && props.winner === props.value ? \"winner\" : \"\")}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        winner={this.props.winner}\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? \"Перейти к ходу #\" + move : \"К началу игры\";\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Выиграл \" + winner;\r\n    } else {\r\n      status = \"Следующий ход: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            winner={winner}\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}